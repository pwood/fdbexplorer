---
name: "tagged-release"

on:
  push: {}
#    tags:
#      - "v[0-9].[0-9]+.[0-9]+"

jobs:
  build:
    strategy:
      matrix:
        versions: [
          { os: "darwin", distro: "macos", arch: "amd64", fdbversion: "7.1.48", fdbclient: "FoundationDB-7.1.48_x86_64.pkg" },
          { os: "darwin", distro: "macos", arch: "arm64", fdbversion: "7.1.48", fdbclient: "FoundationDB-7.1.48_arm64.pkg" },
          { os: "linux", distro: "ubuntu", arch: "amd64", fdbversion: "7.1.48", fdbclient: "foundationdb-clients_7.1.48-1_amd64.deb" },
          { os: "darwin", distro: "macos", arch: "amd64", fdbversion: "7.3.43", fdbclient: "FoundationDB-7.3.43_x86_64.pkg" },
          { os: "darwin", distro: "macos", arch: "arm64", fdbversion: "7.3.43", fdbclient: "FoundationDB-7.3.43_arm64.pkg" },
          { os: "linux", distro: "ubuntu", arch: "amd64", fdbversion: "7.3.43", fdbclient: "foundationdb-clients_7.3.43-1_amd64.deb" }
        ]
    name: Build ${{ matrix.versions.os }} (${{ matrix.versions.arch }}) - ${{ matrix.versions.fdbversion }}
    runs-on: ${{ matrix.versions.distro }}-latest
    steps:
      - name: Set up Go 1.21
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install FoundationDB Client (darwin)
        if: "${{ matrix.versions.os == 'darwin' }}"
        run: |
          wget -nv https://github.com/apple/foundationdb/releases/download/${{ matrix.versions.fdbversion }}/${{ matrix.versions.fdbclient }} -O /tmp/foundationdb.pkg
          sudo installer -pkg /tmp/foundationdb.pkg -target /

      - name: Install FoundationDB Client (linux)
        if: "${{ matrix.versions.os == 'linux' }}"
        run: |
          wget -nv https://github.com/apple/foundationdb/releases/download/${{ matrix.versions.fdbversion }}/${{ matrix.versions.fdbclient }} -O /tmp/foundationdb.deb
          sudo dpkg -i /tmp/foundationdb.deb

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Override specific FoundationDB Go Binding
        run: |
          go get github.com/apple/foundationdb/bindings/go@${{matrix.versions.fdbversion}}

      - name: Build binary
        run: |
          GOOS=${{matrix.versions.os}} GOARCH=${{matrix.versions.arch}} CGO_ENABLED=1 go env
          GOOS=${{matrix.versions.os}} GOARCH=${{matrix.versions.arch}} CGO_ENABLED=1 go build -x -o fdbexplorer-${{matrix.versions.os}}-${{matrix.versions.arch}}-${{ matrix.versions.fdbversion }}

      - name: Run ldd tool on output (darwin)
        if: "${{ matrix.versions.os == 'darwin' }}"
        run: |
          otool -L fdbexplorer-${{matrix.versions.os}}-${{matrix.versions.arch}}-${{ matrix.versions.fdbversion }}

      - name: Run ldd tool on output (linux)
        if: "${{ matrix.versions.os == 'linux' }}"
        run: |
          ldd fdbexplorer-${{matrix.versions.os}}-${{matrix.versions.arch}}-${{ matrix.versions.fdbversion }}

      - name: Calculate checksums
        run: |
          shasum -a 256 ./fdbexplorer-${{matrix.versions.os}}-${{matrix.versions.arch}}-${{ matrix.versions.fdbversion }} > fdbexplorer-${{matrix.versions.os}}-${{matrix.versions.arch}}-${{ matrix.versions.fdbversion }}.sha256

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{matrix.versions.os}}-${{matrix.versions.arch}}-${{ matrix.versions.fdbversion }}
          path: |
            fdbexplorer-*

#  release:
#    name: Release to GitHub
#    needs:
#      - build
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Download all artifacts
#        uses: actions/download-artifact@v4.1.7
#
#      - name: Release to GitHub Releases
#        uses: "marvinpinto/action-automatic-releases@latest"
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          prerelease: false
#          files: |
#            build-*/fdbexplorer-*